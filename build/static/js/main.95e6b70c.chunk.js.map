{"version":3,"sources":["factories/filters.factory.js","factories/campaign.factory.js","reducers/app/appReducer.js","reducers/app/types.js","reducers/rootReducer.js","store.js","components/header/header.component.js","services/campaign.service.js","components/campaign/campaignFilters.component.js","reducers/app/actions.js","components/DateTime.js","components/campaign/scheduleDate.component.js","components/campaign/campaignModal.component.js","components/campaign/tableRow.component.js","components/campaign/campaignTable.component.js","components/home/home.component.js","App.js","serviceWorker.js","index.js"],"names":["filterIds","Object","freeze","UPCOMING","LIVE","PAST","filters","label","id","Campaign","name","region","createdOn","price","csv","report","this","i","data","campaign","filterCateg","computeCategory","imageUrl","_buildImagePath","moment","isSame","isBefore","startOf","_isPast","initialState","loadingCampaigns","campaigns","campaignsById","activeFilterId","appReducer","state","action","type","campaignIds","filterId","newDate","rootReducer","combineReducers","appStore","createStore","applyMiddleware","thunk","Header","className","src","alt","getCampaigns","pass","Promise","resolve","reject","JSON","parse","window","localStorage","getItem","connect","filterCampaigns","dispatch","Nav","variant","defaultActiveKey","onSelect","key","map","filter","Item","Link","eventKey","DateTime","value","format","React","forwardRef","ref","onClick","path","height","CampaignModal","handleClose","console","log","Modal","show","onHide","dialogClassName","Title","Body","Footer","Button","createRef","updateDate","campaignId","useState","openCampaign","setOpenCampaign","dateUpdated","useCallback","date","toggleCampaign","prevValue","fromNow","ago","e","stopPropagation","selected","onChange","customInput","hasItemsForActiveFilter","setItemsForActiveFilter","canShowTable","setShowTable","campaignsLoaded","useRef","prevCampaignsLoaded","current","useEffect","Number","length","loading","loadCampaigns","a","build","forEach","push","warn","App","setItem","stringify","store","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.95e6b70c.chunk.js","sourcesContent":["export const filterIds = Object.freeze({\n  UPCOMING: 1,\n  LIVE: 2,\n  PAST: 3\n})\n\nexport const filters = Object.freeze([\n  {label: 'Upcoming Campaigns', id: filterIds.UPCOMING},\n  {label: 'Live Campaigns', id: filterIds.LIVE},\n  {label: 'Past Campaigns', id: filterIds.PAST}\n])","import moment from 'moment';\nimport  { filterIds } from './filters.factory';\n\n// const path = `./assets/Row Copy 0-Row/Thumb/Bitmap.png`;\n\nclass Campaign {\n  constructor({\n    id,\n    name,\n    region,\n    createdOn,\n    price,\n    csv,\n    report\n  }) {\n    this.id = id;\n    this.name = name;\n    this.region = region;\n    this.createdOn = createdOn * 1000;\n    this.price = price;\n    this.csv = csv;\n    this.report = report;\n  }\n\n  static build(data) {\n    const campaign = new Campaign(data);\n    campaign.filterCateg = Campaign.computeCategory(campaign);\n    campaign.imageUrl = campaign._buildImagePath(data.id);\n    return campaign;\n  }\n\n  static computeCategory(campaign) {\n    if (_isToday(campaign.createdOn)) {\n      return filterIds.LIVE;\n    } else if (_isPast(campaign.createdOn)) {\n      return filterIds.PAST;\n    } else {\n      return filterIds.UPCOMING;\n    }\n  }\n\n  _buildImagePath(i) {\n    return `./bluestacks/assets/Row Copy ${i}-Row/Thumb/Bitmap.png`;\n  }  \n}\n\nfunction _isToday(createdOn) {\n  return moment(createdOn).isSame(moment(), 'day') && moment(createdOn).isSame(moment(), 'month') && moment(createdOn).isSame(moment(), 'year');\n}\n\nfunction _isPast(createdOn) {\n  return moment(createdOn).isBefore(moment().startOf('day'));\n}\n\nexport default Campaign;","import { LOAD_CAMPAIGNS_START, LOAD_CAMPAIGNS_SUCCESS, ON_FILTER, UPDATE_DATE } from './types';\nimport Campaign from '../../factories/campaign.factory';\n\nconst initialState = {\n  loadingCampaigns: false,\n  campaigns: [],\n  campaignsById: {},\n\n  activeFilterId: 1\n}\n\nfunction appReducer(state = initialState, action) {\n  switch(action.type) {\n    case LOAD_CAMPAIGNS_START:\n      return {\n        ...state,\n        loadingCampaigns: true\n      }\n\n    case LOAD_CAMPAIGNS_SUCCESS:\n      return {\n        ...state,\n        loadingCampaigns: false,\n        campaigns: [...action.campaignIds],\n        campaignsById: action.campaignsById\n      }\n\n    case ON_FILTER:\n      return {\n        ...state,\n        activeFilterId: action.filterId\n      }\n\n    case UPDATE_DATE:\n      const campaignsById = {...state.campaignsById};\n      campaignsById[action.id] = {\n        ...campaignsById[action.id],\n        createdOn: action.newDate,\n      }\n\n      campaignsById[action.id].filterCateg = Campaign.computeCategory(campaignsById[action.id])\n\n      return {\n        ...state,\n        campaignsById\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;","export const LOAD_CAMPAIGNS_START = 'LOAD_CAMPAIGNS_START';\nexport const LOAD_CAMPAIGNS_SUCCESS = 'LOAD_CAMPAIGNS_SUCCESS';\nexport const LOAD_CAMPAIGNS_ERROR = 'LOAD_CAMPAIGNS_ERROR';\n\nexport const ON_FILTER = 'ON_FILTER';\nexport const UPDATE_DATE = 'UPDATE_DATE';","import { combineReducers } from \"redux\";\n\nimport appReducer from './app/appReducer';\n\nconst rootReducer = combineReducers({\n  appReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst appStore = createStore(rootReducer, {}, applyMiddleware(thunk));\n\nexport default appStore;","import React from 'react';\n// import logo from '../../logo.png';\nimport '../../styles/header.scss';\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <div className=\"main-wrapper\">\n        <img src=\"./bluestacks/logo.png\"\n             className=\"logo\"\n             alt=\"bluestacks\"/>\n      </div>\n    </div>\n  )\n}\n\nexport default Header;","const getCampaigns = pass =>\n  new Promise((resolve, reject) => {\n    if (pass) {\n      const data = JSON.parse(window.localStorage.getItem('campaignData'))\n      resolve(data);\n    } else {\n      reject();\n    }\n  })\n\nconst data = {\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Test Whatsapp\",\n      \"region\": \"US\",\n      \"createdOn\": 1599332722,\n      \"price\": \"Price info of Test Whatsapp\",\n      \"csv\": \"Some CSV link for Whatsapp\",\n      \"report\": \"Some report link for Whatsapp\",\n      \"image_url\":\"Some image url of the campaign\" \n    },\n    {\n      \"id\": 2,\n      \"name\": \"Super Jewels Quest\",\n      \"region\": \"CA, FR\",\n      \"createdOn\": 1601924722,\n      \"price\": \"Price info of Super Jewels Quest\",\n      \"csv\": \"Some CSV link for Super Jewels Quest\",\n      \"report\": \"Some report link for Super Jewels Ques\",\n      \"image_url\":\"Some image url of the campaign\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Mole Slayer\",\n      \"region\": \"FR\",\n      \"createdOn\": 1599159922,\n      \"price\": \"Price info of Mole Slayer\",\n      \"csv\": \"Some CSV link for Mole Slayer\",\n      \"report\": \"Some report link for Mole Slayer\",\n      \"image_url\":\"Some image url of the campaign\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Mancala Mix\",\n      \"region\": \"JP\",\n      \"createdOn\": 1599332722,\n      \"price\": \"Price info of Mancala Mix\",\n      \"csv\": \"Some CSV link for Mancala Mix\",\n      \"report\": \"Some report link for Mancala Mix\",\n      \"image_url\":\"Some image url of the campaign\"\n    }\n  ]\n}\n\nexport {\n  getCampaigns,\n  data\n}\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport { filters } from '../../factories/filters.factory';\nimport { filterCampaigns } from '../../reducers/app/actions';\n\nfunction CampaignFilters({filterCampaigns}) {\n  return (\n    <div className=\"campaign-filters\">\n      <Nav\n        variant=\"tabs\"\n        defaultActiveKey=\"1\"\n        onSelect={key => filterCampaigns(key)}>\n        {\n          filters.map(filter => (\n            <Nav.Item key={filter.id}>\n              <Nav.Link eventKey={filter.id}>{filter.label}</Nav.Link>\n            </Nav.Item>\n          ))\n        }\n      </Nav>\n    </div>\n  )\n}\n\nexport default connect(null, {\n  filterCampaigns\n})(CampaignFilters);","import { LOAD_CAMPAIGNS_START, LOAD_CAMPAIGNS_SUCCESS, LOAD_CAMPAIGNS_ERROR, ON_FILTER, UPDATE_DATE } from './types';\n\nimport { getCampaigns } from '../../services/campaign.service';\nimport Campaign from '../../factories/campaign.factory';\n\nexport const loadCampaigns = () => async dispatch => {\n  dispatch({\n    type: LOAD_CAMPAIGNS_START\n  })\n  try {\n    const {data} = await getCampaigns(true);\n    const campaigns = data.map((campaign, i) => Campaign.build(campaign, i));\n\n    const campaignIds = [];\n    const campaignsById = {};\n    campaigns.forEach(campaign => {\n      campaignsById[campaign.id] = campaign;\n      campaignIds.push(campaign.id)\n    })\n    \n    dispatch({\n      type: LOAD_CAMPAIGNS_SUCCESS,\n      campaignIds,\n      campaignsById\n    })\n  } catch(e) {\n    console.warn(e);\n    dispatch({\n      type: LOAD_CAMPAIGNS_ERROR\n    })\n  }\n}\n\n\nexport const filterCampaigns = filterId => dispatch => {\n  dispatch({\n    type: ON_FILTER,\n    filterId\n  })\n}\n\nexport const updateDate = (campaign, newDate) => dispatch => {\n  dispatch({\n    type: UPDATE_DATE,\n    id: campaign.id,\n    newDate\n  })\n}","import React from 'react';\nimport Moment from 'react-moment';\n\n// function withMoment(WrappedComponent) {\n//   return class NewComponent extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       // console.log(props);\n//     }\n\n//     render() {\n//       return <WrappedComponent {...this.props}/>\n//     }\n//   }\n// }\n\nfunction DateTime({value, format = 'YYYY/MM/DD'}) {\n  return (\n    <Moment format={format}>{value}</Moment>\n  )\n}\n\nexport default DateTime;","import React from 'react';\n\nconst ScheduleDate = (({onClick, path}, ref) => {\n  return (\n    <div className=\"schedule-datw\"\n         onClick={onClick}>\n      <img src={`${path}/Group/calendar.png`}\n            height=\"20\"\n            className=\"half-breathing-space right-only\"/>\n      Schedule Again\n    </div>\n  )\n})\n\nexport default React.forwardRef(ScheduleDate);\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nfunction CampaignModal({handleClose, campaign}) {\n  console.log(campaign);\n  return (\n    <Modal show={true} onHide={handleClose} dialogClassName=\"campaign-modal\">\n      <Modal.Header>\n        <Modal.Title>\n          <div className=\"title\">\n            <img src={campaign.imageUrl}/>\n            <div className=\"name\">\n              {campaign.name}\n              <span className=\"meta\">{campaign.region}</span>\n            </div>\n          </div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n      <Modal.Footer>\n        <Button value=\"clogin\" variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleClose}>\n          Save Changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default CampaignModal;","import React, { useCallback, useState } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from 'react-redux';\n\nimport { updateDate } from '../../reducers/app/actions';\nimport DateTime from '../DateTime'\nimport Moment from 'react-moment';\nimport { filterIds } from  '../../factories/filters.factory';\nimport ScheduleDate from './scheduleDate.component';\nimport CampaignModal from './campaignModal.component';\n\nconst ref = React.createRef();\n\n\nconst path = `./bluestacks/assets/Row Copy 0-Row`;\n\nfunction TableRow({campaignId, updateDate, campaignsById, activeFilterId}) {\n  const campaign = campaignsById[campaignId];\n\n  const [openCampaign, setOpenCampaign] = useState(false);\n\n  const dateUpdated = React.useCallback((date) => {\n    updateDate(campaign, date);\n  }, []);\n\n  const toggleCampaign = () => {\n    setOpenCampaign(prevValue => {\n      return !prevValue;\n    });\n  }\n\n  if (campaign && campaign.filterCateg == activeFilterId) {\n    return (\n      <>\n        <div className=\"table-row\"\n             onClick={toggleCampaign}>\n          <div className=\"item\">\n            <DateTime\n              format={'MMM YYYY, DD'}\n              value={campaign.createdOn}\n            />\n            {campaign.filterCateg !== filterIds.LIVE && (\n              <div className=\"meta text-capitalize\">\n                <Moment fromNow ago>{campaign.createdOn}</Moment>\n                {campaign.filterCateg === filterIds.PAST ? ' ago' : ' ahead'}\n              </div>\n            )}\n          </div>\n          <div className=\"item campaign-name\">\n            <img src={campaign.imageUrl}/>\n            <div className=\"name\">\n              <span>{campaign.name}</span>\n              <span className=\"meta\">{campaign.region}</span>\n            </div>\n          </div>\n          <div className=\"item\">\n            <img src={`${path}/Group 4/Price.png`}\n                height=\"20\"\n                className=\"half-breathing-space right-only\"/>\n            View Pricing\n          </div>\n          <div className=\"item actions\">\n            <div className=\"action-item\">\n              <img src={`${path}/Group 3/file.png`}\n                  height=\"20\"\n                  className=\"half-breathing-space right-only\"/>\n              CSV\n            </div>\n            <div className=\"action-item\">\n              <img src={`${path}/Group 2/statistics-report.png`}\n                  height=\"20\"\n                  className=\"half-breathing-space right-only\"/>\n              Report\n            </div>\n            <div className=\"action-item\"\n                onClick={e => e.stopPropagation()}>\n              <DatePicker\n                selected={campaign.createdOn}\n                onChange={date => dateUpdated(date)}\n                customInput={<ScheduleDate ref={ref} path={path}/>}\n              />\n            </div>\n          </div>\n        </div>\n        {(openCampaign &&\n          <CampaignModal\n            campaign={campaign}\n            handleClose={toggleCampaign}/>\n        )}\n      </>\n    )\n  } else {\n    return (<></>);\n  }\n}\n\nconst mapStateToProps = ({appReducer}) => ({\n  campaignsById: appReducer.campaignsById,\n  activeFilterId: appReducer.activeFilterId\n})\n\nexport default connect(mapStateToProps, {\n  updateDate\n})(TableRow);","// import Table from 'react-bootstrap/Table'\n\nimport React, { useState, useEffect, useRef} from 'react';\nimport { connect } from 'react-redux';\n\nimport TableRow from './tableRow.component';\nimport '../../styles/campaign-table.scss';\n\nfunction CampaignTable({ campaigns, activeFilterId, campaignsById, loadingCampaigns }) {\n  const [hasItemsForActiveFilter, setItemsForActiveFilter] = useState(true);\n  const [canShowTable, setShowTable] = useState(false);\n\n  const campaignsLoaded = useRef();\n  const prevCampaignsLoaded = campaignsLoaded.current;\n  useEffect(() => {\n    campaignsLoaded.current = loadingCampaigns;\n    if (prevCampaignsLoaded && !campaignsLoaded.current) {\n      setShowTable(true);\n    }\n  }, [loadingCampaigns]);\n\n  useEffect(() => {\n    for(const id in campaignsById) {\n      if (Number(activeFilterId) === Number(campaignsById[id].filterCateg)) {\n          setItemsForActiveFilter(true);\n          break;\n      }\n      setItemsForActiveFilter(false);\n    }\n  }, [campaignsById, activeFilterId]);\n\n  return (\n    <>\n      {canShowTable && (\n        <div className=\"campaign-table\">\n          {campaigns.length && (\n            <div className=\"table\">\n              <div className=\"table-header table-row\">\n                <div className=\"item\">Date</div>\n                <div className=\"item\">Campaign</div>\n                <div className=\"item\">View</div>\n                <div className=\"item\">Actions</div>\n              </div>\n              <div className=\"table-body\">\n                {hasItemsForActiveFilter && campaigns.map((campaign, i) => (\n                  <TableRow campaignId={campaign}\n                            key={i}/>\n                  )\n                )}\n                {!hasItemsForActiveFilter && (\n                  <div className=\"text-center\">No active campaigns in this category.</div>\n                )}\n              </div>\n            </div>\n          )}\n          {!campaigns.length && (\n            <div>Sorry, No campaigns available!</div>\n          )}\n        </div>\n      )}\n    </>\n  )\n}\n\nconst mapStateToProps = ({appReducer}) => ({\n  campaigns: appReducer.campaigns,\n  activeFilterId: appReducer.activeFilterId,\n  campaignsById: appReducer.campaignsById,\n  loadingCampaigns: appReducer.loadingCampaigns\n})\n\nexport default connect(mapStateToProps)(CampaignTable);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport CampaignFilters from '../campaign/campaignFilters.component';\nimport CampaignTable from '../campaign/campaignTable.component';\nimport { loadCampaigns } from '../../reducers/app/actions';\n\nimport '../../styles/home.scss';\n\n\nfunction Home({loadCampaigns}) {\n  useEffect(() => {\n    loadCampaigns();\n  }, []);\n\n  return (\n    <div className=\"home\">\n      <div className=\"main-wrapper\">\n        <h1>\n          Manage Campaigns\n        </h1>\n        <CampaignFilters/>\n        <CampaignTable/>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({appReducer}) => {\n  return {\n    loading: appReducer.loading\n  };\n}\n\nexport default connect(mapStateToProps, {\n  loadCampaigns\n})(Home);","import React, { useState } from 'react';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport store from './store';\nimport './App.scss';\nimport Header from './components/header/header.component';\nimport Home from './components/home/home.component';\nimport './factories/campaign.factory';\n\nimport { data } from './services/campaign.service'\n\nfunction App() {\n  useState(() => {\n    window.localStorage.setItem('campaignData', JSON.stringify(data));\n  })\n\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <Header/>\n        <div className=\"app-container\">\n          <Home/>\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import Moment from 'react-moment';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}