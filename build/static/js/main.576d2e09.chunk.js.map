{"version":3,"sources":["factories/filters.factory.js","factories/campaign.factory.js","reducers/app/appReducer.js","reducers/app/types.js","reducers/rootReducer.js","store.js","components/translator/switchLanguage.component.js","components/header/header.component.js","services/campaign.service.js","components/campaign/campaignFilters.component.js","reducers/app/actions.js","components/DateTime.js","components/campaign/scheduleDate.component.js","components/campaign/campaignModal.component.js","components/campaign/tableRow.component.js","components/campaign/campaignTable.component.js","components/home/home.component.js","App.js","serviceWorker.js","locales/resources.js","i18n.js","index.js"],"names":["filterIds","Object","freeze","UPCOMING","LIVE","PAST","filters","label","id","Campaign","name","region","createdOn","price","csv","report","this","i","process","data","campaign","filterCateg","computeCategory","imageUrl","_buildImagePath","moment","isSame","isBefore","startOf","_isPast","initialState","loadingCampaigns","campaigns","campaignsById","activeFilterId","appReducer","state","action","type","campaignIds","filterId","newDate","rootReducer","combineReducers","appStore","createStore","applyMiddleware","thunk","SwitchLanguage","useTranslation","t","i18n","className","htmlFor","onChange","event","changeLanguage","target","value","Header","src","alt","getCampaigns","pass","Promise","resolve","reject","JSON","parse","window","localStorage","getItem","connect","filterCampaigns","dispatch","Nav","variant","defaultActiveKey","onSelect","key","map","filter","Item","Link","eventKey","DateTime","format","React","forwardRef","ref","onClick","path","height","CampaignModal","handleClose","Modal","show","onHide","dialogClassName","closeButton","Title","Body","updateDate","campaignId","useRef","useState","openCampaign","setOpenCampaign","dateUpdated","useCallback","date","toggleCampaign","prevValue","fromNow","ago","e","stopPropagation","selected","customInput","hasItemsForActiveFilter","setItemsForActiveFilter","canShowTable","setShowTable","tableRef","campaignsLoaded","prevCampaignsLoaded","current","useEffect","Number","scrollLeft","length","loading","loadCampaigns","a","build","forEach","push","console","warn","App","setItem","stringify","store","Boolean","location","hostname","match","en","translation","sp","use","initReactI18next","init","resources","lng","keySeparator","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.576d2e09.chunk.js","sourcesContent":["export const filterIds = Object.freeze({\n  UPCOMING: 1,\n  LIVE: 2,\n  PAST: 3\n})\n\nexport const filters = Object.freeze([\n  {label: 'UPCOMING_CAMPAIGNS', id: filterIds.UPCOMING},\n  {label: 'LIVE_CAMPAIGNS', id: filterIds.LIVE},\n  {label: 'PAST_CAMPAIGNS', id: filterIds.PAST}\n])","import moment from 'moment';\nimport  { filterIds } from './filters.factory';\n\nclass Campaign {\n  constructor({\n    id,\n    name,\n    region,\n    createdOn,\n    price,\n    csv,\n    report\n  }) {\n    this.id = id;\n    this.name = name;\n    this.region = region;\n    this.createdOn = createdOn * 1000;\n    this.price = price;\n    this.csv = csv;\n    this.report = report;\n  }\n\n  static build(data) {\n    const campaign = new Campaign(data);\n    campaign.filterCateg = Campaign.computeCategory(campaign);\n    campaign.imageUrl = campaign._buildImagePath(data.id);\n    return campaign;\n  }\n\n  static computeCategory(campaign) {\n    if (_isToday(campaign.createdOn)) {\n      return filterIds.LIVE;\n    } else if (_isPast(campaign.createdOn)) {\n      return filterIds.PAST;\n    } else {\n      return filterIds.UPCOMING;\n    }\n  }\n\n  _buildImagePath(i) {\n    return `${process.env.PUBLIC_URL}/assets/Row Copy ${i}-Row/Thumb/Bitmap.png`;\n  }  \n}\n\nfunction _isToday(createdOn) {\n  return moment(createdOn).isSame(moment(), 'day') && moment(createdOn).isSame(moment(), 'month') && moment(createdOn).isSame(moment(), 'year');\n}\n\nfunction _isPast(createdOn) {\n  return moment(createdOn).isBefore(moment().startOf('day'));\n}\n\nexport default Campaign;","import { LOAD_CAMPAIGNS_START, LOAD_CAMPAIGNS_SUCCESS, ON_FILTER, UPDATE_DATE } from './types';\nimport Campaign from '../../factories/campaign.factory';\n\nconst initialState = {\n  loadingCampaigns: false,\n  campaigns: [],\n  campaignsById: {},\n\n  activeFilterId: 1\n}\n\nfunction appReducer(state = initialState, action) {\n  switch(action.type) {\n    case LOAD_CAMPAIGNS_START:\n      return {\n        ...state,\n        loadingCampaigns: true\n      }\n\n    case LOAD_CAMPAIGNS_SUCCESS:\n      return {\n        ...state,\n        loadingCampaigns: false,\n        campaigns: [...action.campaignIds],\n        campaignsById: action.campaignsById\n      }\n\n    case ON_FILTER:\n      return {\n        ...state,\n        activeFilterId: action.filterId\n      }\n\n    case UPDATE_DATE:\n      const campaignsById = {...state.campaignsById};\n      campaignsById[action.id] = {\n        ...campaignsById[action.id],\n        createdOn: action.newDate,\n      }\n\n      campaignsById[action.id].filterCateg = Campaign.computeCategory(campaignsById[action.id])\n\n      return {\n        ...state,\n        campaignsById\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;","export const LOAD_CAMPAIGNS_START = 'LOAD_CAMPAIGNS_START';\nexport const LOAD_CAMPAIGNS_SUCCESS = 'LOAD_CAMPAIGNS_SUCCESS';\nexport const LOAD_CAMPAIGNS_ERROR = 'LOAD_CAMPAIGNS_ERROR';\n\nexport const ON_FILTER = 'ON_FILTER';\nexport const UPDATE_DATE = 'UPDATE_DATE';","import { combineReducers } from \"redux\";\n\nimport appReducer from './app/appReducer';\n\nconst rootReducer = combineReducers({\n  appReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst appStore = createStore(rootReducer, {}, applyMiddleware(thunk));\n\nexport default appStore;","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport '../../styles/switch-language.scss';\n\nfunction SwitchLanguage() {\n  const { t, i18n } = useTranslation();\n  const selectLang = event => {\n    i18n.changeLanguage(event.target.value);\n  }\n\n  return (\n    <div className=\"switch-language\">\n      <label htmlFor=\"language-options\">{t('SELECT_LANGUAGE')}</label>\n      <select\n        name=\"language-options\"\n        onChange={selectLang}>\n        <option value=\"en\">{t('ENGLISH')}</option>\n        <option value=\"sp\">{t('SPANISH')}</option>\n      </select>\n    </div>\n  )\n}\n\nexport default SwitchLanguage;","import React from 'react';\nimport '../../styles/header.scss';\nimport SwitchLanguage from '../translator/switchLanguage.component';\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <div className=\"main-wrapper\">\n        <img src={`${process.env.PUBLIC_URL}/logo.png`}\n             className=\"logo\"\n             alt=\"bluestacks\"/>\n      </div>\n\n      <SwitchLanguage/>\n    </div>\n  )\n}\n\nexport default Header;","const getCampaigns = pass =>\n  new Promise((resolve, reject) => {\n    if (pass) {\n      const data = JSON.parse(window.localStorage.getItem('campaignData'))\n      resolve(data);\n    } else {\n      reject();\n    }\n  })\n\nconst data = {\n  \"data\": [\n    {\n      \"id\": 0,\n      \"name\": \"Auto Chess\",\n      \"region\": \"US\",\n      \"createdOn\": 1599332722,\n      \"price\": \"Price info of Auto Chess\",\n      \"csv\": \"Some CSV link for Auto Chess\",\n      \"report\": \"Some report link for Auto Chess\",\n      \"image_url\":\"Some image url of the campaign\" \n    },\n    {\n      \"id\": 1,\n      \"name\": \"Summoners War\",\n      \"region\": \"US\",\n      \"createdOn\": 1599332722,\n      \"price\": \"Price info of Summoners War\",\n      \"csv\": \"Some CSV link for Summoners War\",\n      \"report\": \"Some report link for Summoners War\",\n      \"image_url\":\"Some image url of the campaign\" \n    },\n    {\n      \"id\": 2,\n      \"name\": \"Super Jewels Quest\",\n      \"region\": \"CA, FR\",\n      \"createdOn\": 1601924722,\n      \"price\": \"Price info of Super Jewels Quest\",\n      \"csv\": \"Some CSV link for Super Jewels Quest\",\n      \"report\": \"Some report link for Super Jewels Ques\",\n      \"image_url\":\"Some image url of the campaign\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Mole Slayer\",\n      \"region\": \"FR\",\n      \"createdOn\": 1599159922,\n      \"price\": \"Price info of Mole Slayer\",\n      \"csv\": \"Some CSV link for Mole Slayer\",\n      \"report\": \"Some report link for Mole Slayer\",\n      \"image_url\":\"Some image url of the campaign\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Mortal Kombat\",\n      \"region\": \"JP\",\n      \"createdOn\": 1599332722,\n      \"price\": \"Price info of Mortal Kombat\",\n      \"csv\": \"Some CSV link for Mortal Kombat\",\n      \"report\": \"Some report link for Mortal Kombat\",\n      \"image_url\":\"Some image url of the campaign\"\n    },\n    {\n      \"id\": 5,\n      \"name\": \"PUBG Mobile\",\n      \"region\": \"US\",\n      \"createdOn\": 1600041600,\n      \"price\": \"Price info of PUBG Mobile\",\n      \"csv\": \"Some CSV link for PUBG Mobile\",\n      \"report\": \"Some report link for PUBG Mobile\",\n      \"image_url\":\"Some image url of the campaign\"\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Need for speed No limits\",\n      \"region\": \"CP, PR\",\n      \"createdOn\": 1600560000,\n      \"price\": \"Price info of NFS\",\n      \"csv\": \"Some CSV link for NFS\",\n      \"report\": \"Some report link for NFS\",\n      \"image_url\":\"Some image url of the campaign\"\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Shadow fight 3\",\n      \"region\": \"US\",\n      \"createdOn\": 1608681600,\n      \"price\": \"Price info of Shadow fight\",\n      \"csv\": \"Some CSV link for Shadow fight\",\n      \"report\": \"Some report link for Shadow fight\",\n      \"image_url\":\"Some image url of the campaign\"\n    }\n  ]\n}\n\nexport {\n  getCampaigns,\n  data\n}\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { filters } from '../../factories/filters.factory';\nimport { filterCampaigns } from '../../reducers/app/actions';\n\nfunction CampaignFilters({filterCampaigns}) {\n  const {t} = useTranslation();\n  return (\n    <div className=\"campaign-filters\">\n      <Nav\n        variant=\"tabs\"\n        defaultActiveKey=\"1\"\n        onSelect={key => filterCampaigns(key)}>\n        {\n          filters.map(filter => (\n            <Nav.Item key={filter.id}>\n              <Nav.Link eventKey={filter.id}>{t(filter.label)}</Nav.Link>\n            </Nav.Item>\n          ))\n        }\n      </Nav>\n    </div>\n  )\n}\n\nexport default connect(null, {\n  filterCampaigns\n})(CampaignFilters);","import { LOAD_CAMPAIGNS_START, LOAD_CAMPAIGNS_SUCCESS, LOAD_CAMPAIGNS_ERROR, ON_FILTER, UPDATE_DATE } from './types';\n\nimport { getCampaigns } from '../../services/campaign.service';\nimport Campaign from '../../factories/campaign.factory';\n\nexport const loadCampaigns = () => async dispatch => {\n  dispatch({\n    type: LOAD_CAMPAIGNS_START\n  })\n  try {\n    const {data} = await getCampaigns(true);\n    const campaigns = data.map((campaign, i) => Campaign.build(campaign, i));\n\n    const campaignIds = [];\n    const campaignsById = {};\n    campaigns.forEach(campaign => {\n      campaignsById[campaign.id] = campaign;\n      campaignIds.push(campaign.id)\n    })\n    \n    dispatch({\n      type: LOAD_CAMPAIGNS_SUCCESS,\n      campaignIds,\n      campaignsById\n    })\n  } catch(e) {\n    console.warn(e);\n    dispatch({\n      type: LOAD_CAMPAIGNS_ERROR\n    })\n  }\n}\n\n\nexport const filterCampaigns = filterId => dispatch => {\n  dispatch({\n    type: ON_FILTER,\n    filterId\n  })\n}\n\nexport const updateDate = (campaign, newDate) => dispatch => {\n  dispatch({\n    type: UPDATE_DATE,\n    id: campaign.id,\n    newDate\n  })\n}","import React from 'react';\nimport Moment from 'react-moment';\n\nfunction DateTime({value, format = 'YYYY/MM/DD'}) {\n  return (\n    <Moment format={format}>{value}</Moment>\n  )\n}\n\nexport default DateTime;","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst ScheduleDate = (({onClick, path}, ref) => {\n  const {t} = useTranslation();\n  return (\n    <div className=\"pointer\"\n         onClick={onClick}>\n      <img src={`${path}/Group/calendar.png`}\n            height=\"20\"\n            className=\"half-breathing-space right-only\"/>\n      {t('SCHEDULE_AGAIN')}\n    </div>\n  )\n})\n\nexport default React.forwardRef(ScheduleDate);\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport DateTime from '../DateTime';\nimport '../../styles/campaign-modal.scss';\n\nfunction CampaignModal({handleClose, campaign}) {\n  const { t } = useTranslation();\n  return (\n    <Modal show={true} onHide={handleClose} dialogClassName=\"campaign-modal\">\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <img src={campaign.imageUrl}/>\n          <div className=\"name half-breathing-space left-only\">\n            <div>\n              {campaign.name}\n              <div className=\"meta\">{campaign.region}</div>\n            </div>\n            <div className=\"meta date\">\n              <DateTime\n                format={'MMM YYYY, DD'}\n                value={campaign.createdOn}\n              />\n            </div>\n          </div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div>\n          <label className=\"half-breathing-space right-only\">{t('PRICE')}: </label>\n          {campaign.price}\n        </div>\n        <div>\n          <label className=\"half-breathing-space right-only\">{t('CSV')}: </label>\n          {campaign.csv}\n        </div>\n        <div>\n          <label className=\"half-breathing-space right-only\">{t('REPORT')}: </label>\n          {campaign.report}\n        </div>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default CampaignModal;","import React, { useState, useRef } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from 'react-redux';\n\nimport { updateDate } from '../../reducers/app/actions';\nimport DateTime from '../DateTime'\nimport Moment from 'react-moment';\nimport { filterIds } from  '../../factories/filters.factory';\nimport ScheduleDate from './scheduleDate.component';\nimport CampaignModal from './campaignModal.component';\nimport { useTranslation } from 'react-i18next';\n\nconst path = `${process.env.PUBLIC_URL}/assets/Row Copy 0-Row`;\n\nfunction TableRow({campaignId, updateDate, campaignsById, activeFilterId}) {\n  const {t} = useTranslation();\n  const campaign = campaignsById[campaignId];\n  const ref = useRef();\n\n  const [openCampaign, setOpenCampaign] = useState(false);\n\n  const dateUpdated = React.useCallback((date) => {\n    updateDate(campaign, date);\n  }, []);\n\n  const toggleCampaign = () => {\n    setOpenCampaign(prevValue => {\n      return !prevValue;\n    });\n  }\n\n  if (campaign && campaign.filterCateg == activeFilterId) {\n    return (\n      <>\n        <div className=\"table-row\">\n          <div className=\"item\">\n            <DateTime\n              format={'MMM YYYY, DD'}\n              value={campaign.createdOn}\n            />\n            {campaign.filterCateg !== filterIds.LIVE && (\n              <div className=\"meta text-capitalize\">\n                <Moment fromNow ago>{campaign.createdOn}</Moment>\n                {campaign.filterCateg === filterIds.PAST ? ' ago' : ' ahead'}\n              </div>\n            )}\n          </div>\n          <div className=\"item campaign-name\">\n            <img src={campaign.imageUrl}/>\n            <div className=\"name\">\n              <span>{campaign.name}</span>\n              <span className=\"meta\">{campaign.region}</span>\n            </div>\n          </div>\n          <div className=\"item view-pricing\"\n               onClick={toggleCampaign}>\n            <img src={`${path}/Group 4/Price.png`}\n                height=\"20\"\n                className=\"half-breathing-space right-only\"/>\n            {t('VIEW_PRICING')}\n          </div>\n          <div className=\"item actions\">\n            <div className=\"action-item\">\n              <img src={`${path}/Group 3/file.png`}\n                  height=\"20\"\n                  className=\"half-breathing-space right-only\"/>\n              {t('CSV')}\n            </div>\n            <div className=\"action-item\">\n              <img src={`${path}/Group 2/statistics-report.png`}\n                  height=\"20\"\n                  className=\"half-breathing-space right-only\"/>\n              {t('REPORT')}\n            </div>\n            <div className=\"action-item\"\n                onClick={e => e.stopPropagation()}>\n              <DatePicker\n                selected={campaign.createdOn}\n                onChange={date => dateUpdated(date)}\n                customInput={<ScheduleDate ref={ref} path={path}/>}\n              />\n            </div>\n          </div>\n        </div>\n        {(openCampaign &&\n          <CampaignModal\n            campaign={campaign}\n            handleClose={toggleCampaign}/>\n        )}\n      </>\n    )\n  } else {\n    return (<></>);\n  }\n}\n\nconst mapStateToProps = ({appReducer}) => ({\n  campaignsById: appReducer.campaignsById,\n  activeFilterId: appReducer.activeFilterId\n})\n\nexport default connect(mapStateToProps, {\n  updateDate\n})(TableRow);","import React, { useState, useEffect, useRef} from 'react';\nimport { connect } from 'react-redux';\n\nimport TableRow from './tableRow.component';\nimport '../../styles/campaign-table.scss';\nimport { useTranslation } from 'react-i18next';\n\nfunction CampaignTable({ campaigns, activeFilterId, campaignsById, loadingCampaigns }) {\n  const {t} = useTranslation();\n  const [hasItemsForActiveFilter, setItemsForActiveFilter] = useState(true);\n  const [canShowTable, setShowTable] = useState(false);\n  const tableRef = useRef();\n\n  const campaignsLoaded = useRef();\n  const prevCampaignsLoaded = campaignsLoaded.current;\n  useEffect(() => {\n    campaignsLoaded.current = loadingCampaigns;\n    if (prevCampaignsLoaded && !campaignsLoaded.current) {\n      setShowTable(true);\n    }\n  }, [loadingCampaigns]);\n\n  useEffect(() => {\n    for(const id in campaignsById) {\n      if (Number(activeFilterId) === Number(campaignsById[id].filterCateg)) {\n          setItemsForActiveFilter(true);\n          break;\n      }\n      setItemsForActiveFilter(false);\n    }\n    if (tableRef && tableRef.current) {\n      tableRef.current.scrollLeft = 0;\n    }\n  }, [campaignsById, activeFilterId]);\n\n  return (\n    <>\n      {canShowTable && (\n        <div className=\"campaign-table\">\n          {campaigns.length && (\n            <div className=\"table\"\n                 ref={tableRef}>\n              <div className=\"table-header table-row\">\n                <div className=\"item\">{t('DATE')}</div>\n                <div className=\"item\">{t('CAMPAIGN')}</div>\n                <div className=\"item\">{t('VIEW')}</div>\n                <div className=\"item\">{t('ACTIONS')}</div>\n              </div>\n              <div className=\"table-body\">\n                {hasItemsForActiveFilter && campaigns.map((campaign, i) => (\n                  <TableRow campaignId={campaign}\n                            key={i}/>\n                  )\n                )}\n                {!hasItemsForActiveFilter && (\n                  <div className=\"text-center\">{t('NO_ACTIVE_CAMPAIGNS')}</div>\n                )}\n              </div>\n            </div>\n          )}\n          {!campaigns.length && (\n            <div>{t('NO_CAMPAIGNS')}</div>\n          )}\n        </div>\n      )}\n    </>\n  )\n}\n\nconst mapStateToProps = ({appReducer}) => ({\n  campaigns: appReducer.campaigns,\n  activeFilterId: appReducer.activeFilterId,\n  campaignsById: appReducer.campaignsById,\n  loadingCampaigns: appReducer.loadingCampaigns\n})\n\nexport default connect(mapStateToProps)(CampaignTable);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport CampaignFilters from '../campaign/campaignFilters.component';\nimport CampaignTable from '../campaign/campaignTable.component';\nimport { loadCampaigns } from '../../reducers/app/actions';\n\nimport '../../styles/home.scss';\n\n\nfunction Home({loadCampaigns}) {\n  const { t } = useTranslation();\n  useEffect(() => {\n    loadCampaigns();\n  }, []);\n\n  return (\n    <div className=\"home\">\n      <div className=\"main-wrapper\">\n        <h1>\n          {t('MANAGE_CAMPAIGNS')}\n        </h1>\n        <CampaignFilters/>\n        <CampaignTable/>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({appReducer}) => {\n  return {\n    loading: appReducer.loading\n  };\n}\n\nexport default connect(mapStateToProps, {\n  loadCampaigns\n})(Home);","import React, { useState } from 'react';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport store from './store';\nimport './App.scss';\nimport Header from './components/header/header.component';\nimport Home from './components/home/home.component';\nimport './factories/campaign.factory';\n\nimport { data } from './services/campaign.service'\n\nfunction App() {\n  window.localStorage.setItem('campaignData', JSON.stringify(data));\n\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <Header/>\n        <div className=\"app-container\">\n          <Home/>\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import en from './en.json';\nimport sp from './sp.json';\n\nexport default {\n  en: {\n    translation: en,\n  },\n  sp: {\n    translation: sp,\n  },\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport resources from './locales/resources';\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"en\",\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\n  export default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}